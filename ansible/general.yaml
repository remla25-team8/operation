---
- hosts: all
  become: true
  tasks:
    - name: Get hostname
      command: hostname
      register: hostname_result
      changed_when: false # Rende il task idempotente

    - name: Display hostname
      debug:
        msg: "Current hostname is: {{ hostname_result.stdout }}"

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install common packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
        state: present

    - name: Generate Ansible inventory file # from templates/inventory.cfg.j2
      template:
        src: inventory.cfg.j2
        dest: /home/vagrant/inventory.cfg
        owner: vagrant
        group: vagrant
        mode: "0644"
      when: inventory_hostname == groups['controller'][0]

    # Step 8 (to complete and test)
    - name: Configure /etc/hosts file # from templates/hosts.j2
      template:
        src: hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: "0644"

    # Step 4: Register SSH Keys
    - name: Ensure .ssh directory exists
      file:
        path: /home/vagrant/.ssh
        state: directory
        owner: vagrant
        group: vagrant
        mode: "0700"

    - name: Add SSH public keys
      authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', item) }}"
      with_items:
        - "files/ssh_keys/lorenzo.pub"
        - "files/ssh_keys/yongcheng.pub"
        # Add your public ssh keys (at least two)

    # Includes specific playbook for controller
    - name: Include controller specific tasks
      include_tasks: ctrl.yaml
      when: inventory_hostname in groups['controller']

    # Includes specific playbook for worker
    - name: Include worker specific tasks
      include_tasks: node.yaml
      when: inventory_hostname in groups['worker']

    # Step 5: Disable SWAP
    - name: Disable SWAP for current session
      ansible.builtin.shell:
        cmd: swapoff -a
      changed_when: false
      failed_when: false

    - name: Remove SWAP entry from /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^[^#].*\sswap\s'
        state: absent

    - name: Create k8s.conf for module loading
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        mode: '0644'
      register: k8s_conf

    - name: Load br_netfilter module
      ansible.builtin.modprobe:
        name: br_netfilter
        state: present
      when: k8s_conf.changed

    - name: Enable IPv4 forwarding and bridge filtering
      ansible.builtin.sysctl:
        name: "{{ item }}"
        value: '1'
        state: present
        sysctl_set: yes
        reload: yes
      loop:
        - net.ipv4.ip_forward
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
    
    - name: Manage /etc/hosts file
      ansible.builtin.template:
        src: templates/hosts.j2
        dest: /etc/hosts
        mode: '0644'
