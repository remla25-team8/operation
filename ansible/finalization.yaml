---
- hosts: all
  become: true
  vars:
    kubeconfig: /etc/kubernetes/admin.conf
  tasks:
    # Install required Python packages
    - name: Install python3-kubernetes package
      apt:
        name: python3-kubernetes
        state: present
        update_cache: yes
      become: true
      become_user: root

    # Step 21: Install NGINX Ingress Controller
    - name: Add Nginx Ingress Helm repository
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: https://kubernetes.github.io/ingress-nginx
        kubeconfig: "{{ kubeconfig }}"  

    - name: Install Nginx Ingress Controller
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        release_namespace: ingress-nginx
        create_namespace: true
        kubeconfig: "{{ kubeconfig }}" 
        values:
          controller:
            service:
              type: NodePort

    - name: Wait for Nginx Ingress Controller to be ready
      shell: kubectl --kubeconfig={{ kubeconfig }} wait -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx,app.kubernetes.io/component=controller --for=condition=ready pod --timeout=120s
      changed_when: false

    # Step 22: Kubernetes Dashboard
    # (unchanged â€” keep if you want dashboard)

    # Step 23: Install Istio using Helm
    - name: Add Istio Helm repository
      kubernetes.core.helm_repository:
        name: istio
        repo_url: https://istio-release.storage.googleapis.com/charts
        kubeconfig: "{{ kubeconfig }}"

    - name: Create istio-system namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: istio-system
        kubeconfig: "{{ kubeconfig }}"

    - name: Install Istio base chart
      kubernetes.core.helm:
        name: istio-base
        chart_ref: istio/base
        release_namespace: istio-system
        create_namespace: false
        kubeconfig: "{{ kubeconfig }}"
        wait: true
        chart_version: "1.25.2"

    - name: Install Istio istiod
      kubernetes.core.helm:
        name: istiod
        chart_ref: istio/istiod
        release_namespace: istio-system
        create_namespace: false
        kubeconfig: "{{ kubeconfig }}"
        wait: true
        chart_version: "1.25.2"

    - name: Create istio-ingress namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: istio-ingress
        kubeconfig: "{{ kubeconfig }}"

    - name: Install Istio ingress gateway
      kubernetes.core.helm:
        name: istio-ingress
        chart_ref: istio/gateway
        release_namespace: istio-ingress
        create_namespace: false
        kubeconfig: "{{ kubeconfig }}"
        wait: true
        chart_version: "1.25.2"

    - name: Enable Istio sidecar injection for default namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: default
            labels:
              istio-injection: enabled
        kubeconfig: "{{ kubeconfig }}"

    # Prometheus + Grafana
    - name: Create monitoring namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring
        kubeconfig: "{{ kubeconfig }}"

    - name: Add Prometheus Helm repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts

    - name: Install Prometheus Stack
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        release_namespace: monitoring
        create_namespace: false
        kubeconfig: "{{ kubeconfig }}"
        wait: true
